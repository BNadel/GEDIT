willcox.test
wilcox.test()
?wilcox.test()
wilcox.test(x=c(1,2,3,4),y=c(5,6,7,8))
library(EnsDb.HSapiens.v86)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnsDb.Hsapiens.v86")
library(EnsDb.Hsapiens.v86)
hsens=EnsDb.Hsapiens.v86
my.symbols <- c("ANKRD62P1-PARP4P3")
select(hsens,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL", "GENEID"),
keytype = "SYMBOL")
MySymbols = read.table("../Desktop/Benchmarking/Workspace/Data/SignatureLists/GeneListToConvert.txt")
my.symbols = as.list(MySymbols)
View(my.symbols)
select(hsens,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL", "GENEID"),
keytype = "SYMBOL")
hsens
View(hsens)
?hsens
?EnsDb.HSapiens.v86
??EnsDb.HSapiens.v86
hsens[tables]
hsens[2]
hsens[[2]]
hsens.tables
hsens.tables()
hsens@tables[["entrezgene"]]
hsens@tables["entrezgene"]
hsens@tables[["entrezgene"]]
listTables(EnsDb.Hsapiens.v86)
genes()
genes(hens)
genes(hsens)
genes(hsens, columns = c(listColumns(hsens,"gene"), "entresid"))
genes(hsens, columns = c(listColumns(hsens,"gene"), "entrezid"))
output = genes(hsens, columns = c(listColumns(hsens,"gene"), "entrezid"))
View(output)
View(output)
output@seqnames
output@seqnames@values
genes(hsens)
output = genes(hsens)
View(output)
output = genes(hsens, return.type = "data.frame")
View(output)
convTable = hsens[c(gene_name,entrezid)]
convTable = hsens[c(gene_name,entrezid),]
convTable = hsens[c("gene_name","entrezid"),]
convTable = hsens[c("gene_name","entrezid")]
output[2]
output[2,10]
output[2,11]
output[2,9]
output[c(2,9)]
output[c(9,10)]
convTable = output[c(9,10)]
write.table(convTable, file = "../Desktop/Benchmarking/Workspace/Data/SignatureLists/ConvTable.tsv")
View(convTable)
convTable[2]
write.table(convTable, file = "../Desktop/Benchmarking/Workspace/Data/SignatureLists/ConvTable.tsv")
convTable[3] = unlist(convTable[2])
typeof(convTable[2])
unlist(convTable[2])
UNlisted = unlist(convTable[2])
row.names(convTable)
View(convTable)
as.matrix(convTable)
write.table(as.matrix(convTable), file = "../Desktop/Test.txt"
)
write.table(as.matrix(convTable), file = "../Desktop/Test.txt", sep = "\t")
install.packages(ComICS)
BiocLite("ComICS")
install.packages("ComICS")
dcq
library(ComICS
)
library(ComICS)
dcq()
?dcq
load("../Desktop/EPIC-master/data/TRef.rda")
View(TRef)
TRef
install.packages("devtools")
?install_github
?install_github()
library(devtools)
?install_github()
setwd("../Desktop/GEDIT/Application/Mouse/")
Predictions = read.table("MouseBodyAtlas.tsv_TabulaMurisReference.csv_50_Entropy_0.0Predictions.tsv", header = TRUE, row.names = 1, sep = "\t")
rowClust = FALSE
rowClust = TRUE
colClust = FALSE
predictions = Predictions
numSamples = dim(predictions)[2]
numCTs = dim(predictions)[1]
png(filename = "HM.png", width = 50 * numSamples +250 , height = 60 * numCTs +350)
heatmap.2(predictions, Colv = rowClust, Rowv = colClust, trace = "none",
col = brewer.pal(9, "Oranges"), margins = c(20,20),
colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black",
key = FALSE, lhei = c(.5,4), lwid = c(.5,4),
main = "Predicted Sample Composition")
dev.off()
library(RColerBrewer)
library(RColorBrewer)
library(gplots)
heatmap.2(predictions, Colv = rowClust, Rowv = colClust, trace = "none",
col = brewer.pal(9, "Oranges"), margins = c(20,20),
colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black",
key = FALSE, lhei = c(.5,4), lwid = c(.5,4),
main = "Predicted Sample Composition")
dev.off()
predictions = as.matrix(Predictions)
heatmap.2(predictions, Colv = rowClust, Rowv = colClust, trace = "none",
col = brewer.pal(9, "Oranges"), margins = c(20,20),
colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black",
key = FALSE, lhei = c(.5,4), lwid = c(.5,4),
main = "Predicted Sample Composition")
dev.off()
heatmap.2(predictions, Colv = rowClust, Rowv = colClust, trace = "none",
col = brewer.pal(9, "Oranges"), margins = c(20,20),
colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black",
key = FALSE, lhei = c(.5,4), lwid = c(.5,4),
main = "Predicted Sample Composition")
dev.off()
dev.off()
heatmap.2(predictions, Colv = rowClust, Rowv = colClust, trace = "none",
col = brewer.pal(9, "Oranges"), margins = c(20,20),
colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black",
key = FALSE, lhei = c(.5,4), lwid = c(.5,4),
main = "Predicted Sample Composition")
dev.off()
pdf(file = "HM.pdf", width = .5*numSamples + 5, height = .4*numCTs + 7)
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
dev.off()
Predictions = read.table("MouseBodyAtlas.tsv_TabulaMurisReference.csv_50_Entropy_0.0Predictions.tsv", header = TRUE, row.names = 1, sep = "\t")
predictions = as.matrix(Predictions)
pdf(file = "HM.pdf", width = .5*numSamples + 5, height = .4*numCTs + 7)
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
dev.off()
Predictions = read.table("MouseBodyAtlas.tsv_TabulaMurisReference.csv_50_Entropy_0.0Predictions.tsv", header = TRUE, row.names = 1, sep = "\t")
predictions = as.matrix(Predictions)
pdf(file = "HM.pdf", width = .5*numSamples + 5, height = .4*numCTs + 7)
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
dev.off()
save.image("C:/Users/brian/OneDrive/Desktop/GEDIT/Application/Mouse/Spaceee.RData")
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
library(ggplot2)
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
library(ggplot2)
library(ggplots)
library(gplots)
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
library(RColorBrewer)
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
png(filename = "MouseHeatmap.png", size = c(1000,1000))
png(filename = "MouseHeatmap.png",1000,1000)
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
dev.off()
predictions = read.table("MouseBodyAtlas.tsv_TabulaMurisReference.csv_50_Entropy_0.0Predictions.tsv", header = TRUE, row.names = 1)
png(filename = "MouseHeatmap.png",1000,1000)
heatmap.2(predictions, Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
View(predictions)
heatmap.2(as.matrix(predictions), Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Sample Composition")
dev.off()
heatmap.2(as.matrix(predictions), Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Cell Compositions of Mouse Cells and Tissues")
dev.off()
png(filename = "MouseHeatmap.png",1000,1000)
heatmap.2(as.matrix(predictions), Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Cell Compositions of Mouse Cells and Tissues")
dev.off()
png(filename = "MouseHeatmap.png",2000,2000)
heatmap.2(as.matrix(predictions), Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Cell Compositions of Mouse Cells and Tissues")
dev.off()
heatmap.2(as.matrix(predictions), Rowv = rowClust, Colv = colClust, trace = "none", col = brewer.pal(9, "Oranges"), margins = c(30,30), colsep = 0:dim(predictions)[2], rowsep = 0:dim(predictions)[1],cellnote = round(predictions,2),notecol = "black", key = FALSE, lhei = c(.5,4), lwid = c(.5,4), main = "Predicted Cell Compositions of Mouse Cells and Tissues", notecex = 5, rowcex = 5, Colcex = 5)
dev.off()
save.image("C:/Users/brian/OneDrive/Desktop/GEDIT/Application/Mouse/Spaceee.RData")
